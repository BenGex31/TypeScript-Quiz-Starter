{"ast":null,"code":"import axios from \"axios\";\nimport { TYPES } from \"./action-types\";\nvar Difficulty;\n\n(function (Difficulty) {\n  Difficulty[\"easy\"] = \"easy\";\n  Difficulty[\"medium\"] = \"medium\";\n  Difficulty[\"hard\"] = \"hard\";\n})(Difficulty || (Difficulty = {}));\n\nexport const getQuizListItem = (questionAmount, difficulty) => {\n  return async dispatch => {\n    const r = await axios.get(`https://opentdb.com/api.php?amount=${questionAmount}&difficulty=${difficulty}&type=boolean`);\n    dispatch({\n      type: TYPES.getQuizListItems,\n      payload: r.data.results\n    });\n  };\n};\nexport const giveAnswer = (isCorrectAnswer, isLastQuestion) => {\n  return async dispatch => {\n    if (isCorrectAnswer) {\n      dispatch({\n        type: TYPES.gaveCorrectAnswer\n      });\n    }\n\n    if (!isLastQuestion) {\n      dispatch({\n        type: TYPES.setNextQuestion\n      });\n    }\n  };\n};\nexport const restart = () => {};","map":{"version":3,"sources":["/Users/benjamindesole/Documents/GitHub/TypeScript-Quiz-Starter/src/actions/quiz.ts"],"names":["axios","TYPES","Difficulty","getQuizListItem","questionAmount","difficulty","dispatch","r","get","type","getQuizListItems","payload","data","results","giveAnswer","isCorrectAnswer","isLastQuestion","gaveCorrectAnswer","setNextQuestion","restart"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,KAAT,QAAsB,gBAAtB;IAEKC,U;;WAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAML,OAAO,MAAMC,eAAe,GAAG,CAACC,cAAD,EAA0BC,UAA1B,KAAsE;AACjG,SAAO,MAAOC,QAAP,IAAsD;AACzD,UAAMC,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAsB,sCAAqCJ,cAAe,eAAcC,UAAW,eAAnG,CAAhB;AACAC,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAER,KAAK,CAACS,gBAAb;AAA+BC,MAAAA,OAAO,EAAGJ,CAAC,CAACK,IAAF,CAAOC;AAAhD,KAAD,CAAR;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMC,UAAU,GAAG,CAACC,eAAD,EAA4BC,cAA5B,KAAyD;AAC/E,SAAO,MAAOV,QAAP,IAAsD;AACzD,QAAIS,eAAJ,EAAqB;AACjBT,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAGR,KAAK,CAACgB;AAAd,OAAD,CAAR;AACH;;AACD,QAAI,CAACD,cAAL,EAAqB;AACjBV,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAGR,KAAK,CAACiB;AAAd,OAAD,CAAR;AACH;AACJ,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,OAAO,GAAG,MAAM,CAE5B,CAFM","sourcesContent":["import axios from \"axios\"\nimport { AnyAction } from \"redux\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { IquizList } from \"../models\"\nimport { TYPES } from \"./action-types\"\n\nenum Difficulty {\n    easy = \"easy\",\n    medium = \"medium\",\n    hard = \"hard\"\n}\n\nexport const getQuizListItem = (questionAmount : number, difficulty : \"easy\" | \"medium\" | \"hard\") => {\n    return async (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\n        const r = await axios.get<IquizList>(`https://opentdb.com/api.php?amount=${questionAmount}&difficulty=${difficulty}&type=boolean`)\n        dispatch({type: TYPES.getQuizListItems, payload : r.data.results})\n    }\n}\n\nexport const giveAnswer = (isCorrectAnswer : boolean, isLastQuestion : boolean) => {\n    return async (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\n        if (isCorrectAnswer) {\n            dispatch({type : TYPES.gaveCorrectAnswer})\n        }\n        if (!isLastQuestion) {\n            dispatch({type : TYPES.setNextQuestion})\n        }\n    }\n}\n\nexport const restart = () => {\n\n}"]},"metadata":{},"sourceType":"module"}