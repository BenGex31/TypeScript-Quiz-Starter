{"ast":null,"code":"import { TYPES } from \"../actions/action-types\";\nconst quizInitialState = {\n  quizListItem: [],\n  currentQuizItemIndex: 0,\n  countCorrectAnswer: 0\n};\nexport const QuizReducer = (state = quizInitialState, action) => {\n  switch (action.type) {\n    case TYPES.getQuizListItems:\n      return { ...state,\n        quizListItem: action.payload\n      };\n\n    case TYPES.gaveCorrectAnswer:\n      return { ...state,\n        countCorrectAnswer: state.countCorrectAnswer + 1\n      };\n\n    default:\n      return state;\n  }\n};\n_c = QuizReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizReducer\");","map":{"version":3,"sources":["/Users/benjamindesole/Documents/GitHub/TypeScript-Quiz-Starter/src/reducers/quiz.ts"],"names":["TYPES","quizInitialState","quizListItem","currentQuizItemIndex","countCorrectAnswer","QuizReducer","state","action","type","getQuizListItems","payload","gaveCorrectAnswer"],"mappings":"AACA,SAASA,KAAT,QAAsB,yBAAtB;AASA,MAAMC,gBAAoC,GAAG;AACzCC,EAAAA,YAAY,EAAE,EAD2B;AAEzCC,EAAAA,oBAAoB,EAAG,CAFkB;AAGzCC,EAAAA,kBAAkB,EAAG;AAHoB,CAA7C;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,gBAAT,EAA2BM,MAA3B,KAAoE;AAC3F,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,KAAK,CAACS,gBAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,YAAY,EAAIK,MAAD,CAAoCG;AAFhD,OAAP;;AAIJ,SAAKV,KAAK,CAACW,iBAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,kBAAkB,EAAEE,KAAK,CAACF,kBAAN,GAA2B;AAF5C,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAZR;AAcH,CAfM;KAAMD,W","sourcesContent":["import { AnyAction } from \"redux\";\nimport { TYPES } from \"../actions/action-types\"\nimport { IquizListItem, Action } from \"../models\";\n\nexport interface IquizInitialState {\n    quizListItem : IquizListItem[],\n    currentQuizItemIndex : number,\n    countCorrectAnswer : number\n}\n\nconst quizInitialState : IquizInitialState = {\n    quizListItem: [],\n    currentQuizItemIndex : 0,\n    countCorrectAnswer : 0\n}\n\nexport const QuizReducer = (state = quizInitialState, action: AnyAction): IquizInitialState => {\n    switch(action.type) {\n        case TYPES.getQuizListItems :\n            return {\n                ...state,\n                quizListItem : (action as Action<IquizListItem[]>).payload\n            }\n        case TYPES.gaveCorrectAnswer :\n            return {\n                ...state,\n                countCorrectAnswer: state.countCorrectAnswer + 1\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}