{"ast":null,"code":"var _jsxFileName = \"/Users/benjamindesole/Documents/GitHub/TypeScript-Quiz-Starter/src/App.tsx\";\nimport React, { Component } from \"react\";\nimport { Container, Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport { StyledButtonTrue, StyledButtonFalse } from \"./style\";\nimport { connect } from \"react-redux\";\nimport { getQuizListItem } from \"./actions/quiz\";\nimport { getCurrentQuizListItem } from \"./selectors/quiz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderHeader = () => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: 10,\n          fontWeight: \"fontWeightBold\",\n          fontSize: 40,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"#e55fff\"\n            },\n            children: \"Easy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"#2858fb\"\n            },\n            children: \"Quizy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 10,\n          fontSize: 20,\n          className: \"txt\",\n          children: [\" Score : \", this.props.score, \" / \", this.props.quizListLength]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.renderQuestionInfo = () => {\n      const {\n        quizListLength,\n        currentQuizItemIndex,\n        currentQuizItem\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        style: {\n          minHeight: '40vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"txt question_number\",\n          children: [\"Question N\\xB0 \", currentQuizItemIndex, \" / \", quizListLength, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"txt question_number\",\n          children: [\" Category \", currentQuizItem.category, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"txt\",\n          dangerouslySetInnerHTML: {\n            __html: currentQuizItem.question\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.answerQuestion = answer => () => {\n      const isCorrect;\n    };\n\n    this.renderButton = () => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justify: \"space-evenly\",\n        children: [/*#__PURE__*/_jsxDEV(StyledButtonTrue, {\n          onClick: this.answerQuestion(\"True\"),\n          children: \"TRUE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StyledButtonFalse, {\n          onClick: this.answerQuestion(\"False\"),\n          children: \"FALSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getQuizListItem(10, \"easy\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [this.renderHeader(), this.props.currentQuizItem && this.renderQuestionInfo(), this.renderButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const s = state;\n  return {\n    currentQuizItem: getCurrentQuizListItem(s),\n    currentQuizItemIndex: s.quiz.currentQuizItemIndex,\n    quizListLength: s.quiz.quizListItem.length,\n    score: s.quiz.score\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getQuizListItem: (questionAmount, difficulty) => dispatch(getQuizListItem(questionAmount, difficulty))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/benjamindesole/Documents/GitHub/TypeScript-Quiz-Starter/src/App.tsx"],"names":["React","Component","Container","Grid","Box","StyledButtonTrue","StyledButtonFalse","connect","getQuizListItem","getCurrentQuizListItem","App","renderHeader","color","props","score","quizListLength","renderQuestionInfo","currentQuizItemIndex","currentQuizItem","minHeight","category","__html","question","answerQuestion","answer","isCorrect","renderButton","componentDidMount","render","mapStateToProps","state","s","quiz","quizListItem","length","mapDispatchToProps","dispatch","questionAmount","difficulty"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { StyledButtonTrue, StyledButtonFalse } from \"./style\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { IStore } from \"./reducers\";\r\nimport { getQuizListItem } from \"./actions/quiz\";\r\nimport { IquizListItem } from \"./models\";\r\nimport { getCurrentQuizListItem } from \"./selectors/quiz\";\r\n\r\ninterface OwnProps {\r\n\r\n}\r\n\r\ninterface StateProps {\r\n  currentQuizItem? : IquizListItem;\r\n  currentQuizItemIndex : number;\r\n  quizListLength : number,\r\n  score :number\r\n}\r\n\r\ninterface DispatchProps {\r\n  getQuizListItem : typeof getQuizListItem\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\nexport class App extends Component<Props> {\r\n  componentDidMount() {\r\n    this.props.getQuizListItem(10, \"easy\")\r\n  }\r\n\r\n  private renderHeader = () => {\r\n    return (<Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n      <Box mt={10} fontWeight=\"fontWeightBold\" fontSize={40} >\r\n        <div style={{ color: \"#e55fff\" }}>Easy</div>\r\n        <div style={{ color: \"#2858fb\" }} >Quizy</div>\r\n      </Box>\r\n      <Box mt={10} fontSize={20} className=\"txt\"> Score : {this.props.score} / {this.props.quizListLength}</Box>\r\n    </Grid>)\r\n  }\r\n\r\n  private renderQuestionInfo = () => {\r\n    const { quizListLength, currentQuizItemIndex, currentQuizItem } = this.props\r\n    return (<Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '40vh' }}>\r\n      <div className=\"txt question_number\">Question N° {currentQuizItemIndex} / {quizListLength} </div>\r\n      <div className=\"txt question_number\"> Category {currentQuizItem!.category} </div>\r\n      <div className=\"txt\" dangerouslySetInnerHTML={{ __html : currentQuizItem!.question}} ></div>\r\n    </Grid>)\r\n  }\r\n\r\n  private answerQuestion = (answer : \"True\" | \"False\") => () => {\r\n    const isCorrect\r\n  }\r\n\r\n  private renderButton = () => {\r\n    return (\r\n      <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-evenly\" >\r\n        <StyledButtonTrue onClick={this.answerQuestion(\"True\")} >TRUE</StyledButtonTrue>\r\n        <StyledButtonFalse onClick={this.answerQuestion(\"False\")} >FALSE</StyledButtonFalse>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\" >\r\n        {this.renderHeader()}\r\n        {this.props.currentQuizItem && this.renderQuestionInfo()}\r\n        {this.renderButton()}\r\n      </Container >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: IStore): StateProps => {\r\n  const s = state as IStore;\r\n  return {\r\n    currentQuizItem : getCurrentQuizListItem(s),\r\n    currentQuizItemIndex : s.quiz.currentQuizItemIndex,\r\n    quizListLength : s.quiz.quizListItem.length,\r\n    score : s.quiz.score\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<{}, {}, any>): DispatchProps => {\r\n  return {\r\n    getQuizListItem : (questionAmount : number, difficulty : \"easy\" | \"medium\" | \"hard\") => dispatch(getQuizListItem(questionAmount, difficulty))\r\n\r\n  }\r\n}\r\n\r\nexport default connect<StateProps,DispatchProps,OwnProps, IStore>(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}